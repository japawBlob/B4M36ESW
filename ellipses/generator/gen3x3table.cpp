#include <stdio.h>
#include <math.h>


int main(int argc, char *argv[])
{
    FILE *f = (argc > 1) ? fopen(argv[1], "w") : stdout;
    fprintf(f, "// Automatically generated by %s. Do not edit!\n", argv[0]);
    fprintf(f, "const struct { int dx:2; int dy:2; } centerOfGravity3x3[1 << (3 * 3)] = {\n");
    for (int c = 0; c < (1 << 3*3); c++) {
#define B(c, bit) static_cast<char>(((c) & (1 << (bit))) ? 1 : 0)
        char a[3][3] = {
            { B(c, 8), B(c, 7), B(c, 6) },
            { B(c, 5), B(c, 4), B(c, 3) },
            { B(c, 2), B(c, 1), B(c, 0) },
        };
        int xx = 0, yy = 0, sum = 0;
        for (int y = -1; y <=1; y++) {
            fprintf(f, "// ");
            for (int x = -1; x <=1; x++) {
                xx += a[y+1][x+1] ? x : 0;
                yy += a[y+1][x+1] ? y : 0;
                sum += a[y+1][x+1] ? 1 : 0;
                fprintf(f, "%c", a[y+1][x+1] ? 'x' : '.');
            }
            fprintf(f, "\n");
        }
        float fx = (float)xx/sum, fy = (float)yy/sum;
        xx = (isnan(fx)) ? 0 : static_cast<int>(round(fx));
        yy = (isnan(fy)) ? 0 : static_cast<int>(round(fy));

        fprintf(f, "{ %2d, %2d },   //%4.1f %4.1f\n\n", xx, yy, fx, fy);
    }
    fprintf(f, "};\n");
    return 0;
}
